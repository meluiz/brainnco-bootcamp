import React from 'react'

import Header from './components/header'
import Menu from './components/menu'
import Sidebar from './components/sidebar'
import Main from './components/main'
import Footer from './components/footer'

import Text from './components/paragraph'
import { H2 } from './components/heading'

const App = () => {
  const articles = [
    {
      _id: 0,
      icon: 'üìï',
      title: 'O que √© HTML?',
      content: <>
        <Text>
          Sigla para HyperText Markup Language ‚Äî Linguagem de Marca√ß√£o de
          Hipertexto ‚Äî, o HTML √© o componente base da web. Isso quer dizer que
          ele permite a constru√ß√£o de websites e a inser√ß√£o de novos conte√∫dos,
          como imagens e v√≠deos, por meio dos hipertextos.
        </Text>

        <Text>
          Os hipertextos s√£o a jun√ß√£o de v√°rios elementos ‚Äî palavras, v√≠deos e
          conte√∫dos ‚Äî, que, quando conectados, estabelecem uma rede de dados que
          permite a comunica√ß√£o, o armazenamento e o compartilhamento de
          informa√ß√µes.
        </Text>

        <Text>
          Por exemplo, ao visitar um website, voc√™ encontra diversas informa√ß√µes
          com formata√ß√µes diferentes, como par√°grafos, bullets e fontes
          distintas. Pois ent√£o, essa estrutura√ß√£o √© realizada por meio do HTML.
        </Text>

        <H2>Qual a fun√ß√£o do HTML?</H2>

        <Text>
          Imagine que voc√™ precisa construir um site do zero com informa√ß√µes da
          sua empresa. Nesse caso, voc√™ precisar√° conhecer a estrutura do HTML,
          criando um documento no bloco de notas e acrescentando c√≥digos
          ‚Äî tags ‚Äî, que indicar√£o par√°grafos, quebra de texto, espa√ßamento,
          imagens, entre outros.
        </Text>

        <Text>
          O diferencial do React √© ser r√°pida, escal√°vel e simples, podendo ser
          usada com outras bibliotecas ou frameworks de JavaScript, como o
          Angular JS. Essa amplitude de funcionalidades e sua forma
          descomplicada de realizar processos s√£o os respons√°veis pela
          ferramenta ser t√£o buscada pelos programadores.
        </Text>

        <Text>
          Criada pelo engenheiro de software, Jordan Walke, o React.js lida com
          a camada de visualiza√ß√£o para aplica√ß√µes web e m√≥veis. A ferramenta
          permite a cria√ß√£o de componentes de UI reutiliz√°veis. 
        </Text>

        <Text>
          Assim, possibilita aos desenvolvedores criarem aplica√ß√µes web, tendo a
          facilidade de alterar elementos ou os dados exibidos, sem recarregar a
          p√°gina. Por exemplo, o n√∫mero de likes de uma rede social pode aumentar
          ou diminuir sem a necessidade de realizar o refresh na p√°gina. 
        </Text>

        <div className="main-reference">
          <a href="https://www.totvs.com/blog/developers/o-que-e-html/" target="_blank" rel="noreferrer">Continue lendo</a>
        </div>
      </>
    },
    {
      _id: 1,
      icon: 'üé®',
      title: 'O que √© CSS?',
      content: <>
        <Text>
          CSS √© chamado de linguagem Cascading Style Sheet e √© usado para
          estilizar elementos escritos em uma linguagem de marca√ß√£o como HTML. O
          CSS separa o conte√∫do da representa√ß√£o visual do site. Pense  na
          decora√ß√£o da sua p√°gina. Utilizando o CSS √© poss√≠vel alterar a cor do
          texto e do fundo, fonte e espa√ßamento entre par√°grafos. Tamb√©m pode
          criar tabelas, usar varia√ß√µes de layouts, ajustar imagens para suas
          respectivas telas e assim por diante.
        </Text>
        
        <Text>
          CSS foi desenvolvido pelo W3C (<a href="https://www.w3.org/" target="_blank" rel="noreferrer">World Wide Web Consortium</a>) em 1996, por
          uma raz√£o bem simples. O HTML n√£o foi projetado para ter tags que
          ajudariam a formatar a p√°gina. Voc√™ deveria apenas escrever a
          marca√ß√£o para o site.
        </Text>

        <Text>
          Tags como <i>&lt;font&gt;</i> foram introduzidas na vers√£o 3.2 do HTML e
          causaram muitos problemas para os desenvolvedores. Como os sites
          tinham diferentes fontes, cores e estilos, era um processo longo,
          doloroso e caro para reescrever o c√≥digo. Assim, o CSS foi criado
          pelo W3C para resolver este problema.
        </Text>

        <Text>
          A rela√ß√£o entre HTML e CSS √© bem forte. Como o HTML √© uma linguagem de
          marca√ß√£o (o alicerce de um site) e o CSS √© focado no estilo (toda a
          est√©tica de um site), eles andam juntos.
        </Text>

        <Text>
          CSS n√£o √© tecnicamente uma necessidade, mas provavelmente voc√™ n√£o
          gostaria de olhar para um site que usa apenas HTML, pois isso
          pareceria completamente abandonado.
        </Text>

        <H2>Vantagens do CSS</H2>

        <Text>
          A diferen√ßa entre um site que implementa CSS e outro que n√£o o usa
          √© gigantesca e not√°vel.
        </Text>

        <Text>
          Voc√™ j√° deve ter visto um site que n√£o carrega completamente ou tem um
          plano de fundo branco com texto azul e preto. Isso significa que a
          parte CSS do site n√£o foi carregada corretamente ou n√£o existe.
        </Text>

        <Text>
          E √© assim que um site somente com HTML se parece. Acredito que voc√™ vai
          concordar comigo de que isso n√£o √© muito bonito, certo?
        </Text>

        <Text>
          Antes de usar CSS, toda a estiliza√ß√£o tinha que ser inclu√≠da na
          marca√ß√£o HTML. Isso significa que voc√™ deveria descrever separadamente
          todo o plano de fundo, as cores das fontes, os alinhamentos, etc.
        </Text>

        <Text>
          Mas o CSS permite que voc√™ estilize tudo em um arquivo diferente,
          criando assim o estilo separadamente. E, mais tarde, fa√ßa integra√ß√£o
          do arquivo CSS na parte superior da marca√ß√£o HTML. Isso mant√©m a
          marca√ß√£o HTML limpa e f√°cil de manter.
        </Text>

        <Text>
          Resumindo, com o CSS voc√™ n√£o precisa mais escrever repetidamente como
          os elementos individuais se parecem. Isso economiza tempo, encurta o
          c√≥digo e diminui a chance de erros.
        </Text>

        <Text>
          O CSS permite que voc√™ tenha v√°rios estilos em uma p√°gina HTML,
          tornando as possibilidades de personaliza√ß√£o quase infinitas.
          Hoje em dia, isso est√° se tornando mais uma necessidade do que um
          simples recurso.
        </Text>

        <div className="main-reference">
          <a href="https://www.hostinger.com.br/tutoriais/o-que-e-html-conceitos-basicos/" target="_blank" rel="noreferrer">Continue lendo</a>
        </div>
      </>
    },
    {
      _id: 2,
      icon: 'üèóÔ∏è',
      title: 'O que √© Javascript?',
      content: <>
        <Text>
          JavaScript √© uma linguagem de programa√ß√£o de alto n√≠vel criada, a
          princ√≠pio, para ser executada em navegadores e manipular comportamentos
          de p√°ginas web.
        </Text>

        <Text>
          Segundo a Mozilla Foundation, atual nome da antiga Netscape
          Communications Corporations, empresa respons√°vel pela cria√ß√£o do JS,
          ‚ÄúJavaScript √© uma linguagem de programa√ß√£o, leve, interpretada,
          orientada a objetos, baseada em prot√≥tipos e em first-class functions
          (fun√ß√µes de primeira classe), mais conhecida como a linguagem de
          script da Internet.‚Äú
        </Text>

        <Text>
          JavaScript √© uma linguagem de programa√ß√£o de alto n√≠vel criada, a
          princ√≠pio, para ser executada em navegadores e manipular comportamentos
          de p√°ginas web.
        </Text>

        <Text>
          Com seus scripts √© poss√≠vel incluir, em uma p√°gina est√°tica, elementos
          din√¢micos como mapas, formul√°rios, opera√ß√µes num√©ricas, anima√ß√µes,
          infogr√°ficos interativos e muito mais.
        </Text>

        <Text>
          O JavaScript √© uma das mais importantes tecnologias voltadas para o
          front-end e, unindo-se ao trio HTML, CSS e PHP, formam um grupo de
          linguagens que abrangem praticamente todas as exig√™ncias do
          desenvolvimento de uma p√°gina completa, din√¢mica e com boa performance.
        </Text>

        <Text>
          Do final dos anos 90 at√© meados dos anos 2000, o JS ganhou grande
          popularidade ao ser utilizado por grandes empresas para a constru√ß√£o
          de seus sites, como o Facebook, por exemplo.
        </Text>

        <Text>
          Alguns exemplos de sites que utilizam JS em seu front e back-end hoje
          em dia s√£o Ebay, LinkedIn e Yahoo.
        </Text>

        <Text>
          Mas o JS n√£o se restringe mais apenas √†s p√°ginas e aos navegadores,
          como foi durante v√°rios anos: com o advento de diversos frameworks,
          APIs, melhorias e cria√ß√£o de centenas de fun√ß√µes, hoje j√° √© poss√≠vel
          utilizar JavaScript em aplicativos mobile, softwares para desktop e
          at√© mesmo em back-end.
        </Text>

        <div className="main-reference">
          <a href="https://kenzie.com.br/blog/javascript/" target="_blank" rel="noreferrer">Continue lendo</a>
        </div>
      </>
    },
    {
      _id: 3,
      icon: '‚öõÔ∏è',
      title: 'O que √© React?',
      content: <>
        <Text>
          React JS √© uma biblioteca JavaScript para a cria√ß√£o de interfaces de
          usu√°rio ‚Äî ou UI (user interface).
        </Text>

        <Text>
          Criado em 2011 pelo time do Facebook, o React surgiu com o objetivo de
          otimizar a atualiza√ß√£o e a sincroniza√ß√£o de atividades simult√¢neas no
          feed de not√≠cias da rede social, entre eles chat, status, listagem de
          contatos e outros.
        </Text>

        <Text>
          A princ√≠pio, todas essas atividades, chamadas de estados, tinham uma
          descri√ß√£o muito complexa. Com o React, esta descri√ß√£o torna-se mais
          simples, bem como tamb√©m √© simplificada a conex√£o entre HTML, CSS e
          JavaScript e todos os componentes de uma p√°gina.
        </Text>

        <Text>
          Por ter demonstrado grande efici√™ncia, nos anos que se seguiram o
          React foi incorporado √† interface de outras redes sociais do grupo,
          como o Instagram e, em 2013, seu c√≥digo foi aberto √† comunidade, dando
          in√≠cio a sua populariza√ß√£o.
        </Text>

        <Text>
          Hoje, o React √© uma das mais prestigiadas bibliotecas de JavaScript do
          mercado.
        </Text>

        <H2>Como funciona o React?</H2>

        <Text>
          O React √© uma biblioteca front-end e tem como um de seus objetivos
          facilitar a conex√£o entre diferentes partes de uma p√°gina, portanto
          seu funcionamento acontece atrav√©s do que chamamos de componentes.
        </Text>

        <Text>
          Em outras palavras, podemos imaginar que o React divide uma tela em
          diversos componentes para, ent√£o, trabalhar sobre eles de maneira
          individual.
        </Text>

        <Text>
          Os componentes s√£o utilizados para reaproveitamento de c√≥digo e
          padroniza√ß√£o de interface.
        </Text>

        <Text>
          Isso torna o React uma tecnologia muito flex√≠vel para a solu√ß√£o de
          problemas e para a constru√ß√£o de interfaces reutiliz√°veis, uma vez que
          cada um destes componentes pode ser manipulado de maneira distinta.
        </Text>

        <div className="main-reference">
          <a href="https://kenzie.com.br/blog/react/" target="_blank" rel="noreferrer">Continue lendo</a>
        </div>
      </>
    }
  ]

  const [ icon, setIcon ] = React.useState(articles[0].icon)
  const [ title, setTitle ] = React.useState(articles[0].title)
  const [ content, setContent ] = React.useState(articles[0].content)

  const handleArticle = (icon, title, content) => {
    setIcon(icon)
    setTitle(title)
    setContent(content)
  }

  return (
    <div className="wrapper">
      <div className="grid-area">
        <Header />
        <Menu />
        <Sidebar articles={articles} handleArticle={handleArticle} />
        <Main icon={icon} title={title} content={content} />
        <Footer />
      </div>
    </div>
  )
}

export default App